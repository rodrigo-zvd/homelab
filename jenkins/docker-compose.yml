version: '3.1'

services:
  jenkins:
    build:
      context: .
      dockerfile: Dockerfile.jenkins
    environment:
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1
    networks:
      - docker
    ports:
      - 8080:8080
      - 50000:50000
    tty: true
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client:ro

  dind:
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    image: docker:dind
    privileged: true
    restart: always
    networks:
      docker:
        aliases: 
          - docker
    ports:
      - 2376:2376
    tty: true
    volumes:
      - jenkins-docker-certs:/certs/client
      - jenkins-data:/var/jenkins_home
      - docker-cache:/var/lib/docker

  minio:
    image: quay.io/minio/minio:RELEASE.2024-11-07T00-52-20Z
    command:
      - server
      - /data
      - --console-address
      - ":9001"
    ports:
      - 9000:9000
      - 9001:9001
    networks:
      docker:
        aliases: 
          - minio
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=rootroot
      - MINIO_DEFAULT_BUCKETS=root

  xen-orchestra:
    build:
      context: .
      dockerfile: Dockerfile.xen-orchestra
    restart: unless-stopped
    # image: ronivay/xen-orchestra:latest
    stop_grace_period: 1m
    ports:
        - "8081:80"
    networks:
      docker:
        aliases: 
          - xen-orchestra
    environment:
        - HTTP_PORT=80
    cap_add:
      - SYS_ADMIN
      - DAC_READ_SEARCH
    security_opt:
      - apparmor:unconfined
    volumes:
      - xo-data:/var/lib/xo-server
      - redis-data:/var/lib/redis
    logging: &default_logging
        driver: "json-file"
        options:
            max-size: "1M"
            max-file: "2"

networks:
  docker:

volumes:
  docker-cache:
  jenkins-data:
  jenkins-docker-certs:
  minio_data:
  xo-data:
  redis-data:

  docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker --name ci-runner alpine sh
