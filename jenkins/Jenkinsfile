pipeline {
  agent any

  environment {
    // XOA_URL = credentials('xoa_url')
    XOA_USER = credentials('xoa_user')
    XOA_PASSWORD = credentials('xoa_password')
    AWS_ACCESS_KEY_ID = credentials('aws_access_key_id')
    AWS_SECRET_ACCESS_KEY = credentials('aws_secret_access_key')
    JENKINS_PUB_KEY = credentials('jenkins-pub-key')
    JENKINS_PRIV_KEY = credentials('jenkins-priv-key')
  }
  
  stages {

    stage('authentication') {
      agent {
        docker {
          image 'alpine'
        }
      }
      steps {
        dir('terraform') {
          withCredentials([sshUserPrivateKey(credentialsId: 'jenkins-priv-key', keyFileVariable: 'JENKINS_PRIV_KEY')]) {
            sh '''
              cp "$JENKINS_PRIV_KEY" id_ed25519
              echo "$JENKINS_PUB_KEY" > id_ed25519.pub
            '''
          }
        }
      }
    }

    stage('setup terraform endpoints') {
      steps {
        script {
          def minioIp = sh(script: "getent hosts minio | awk '{ print \$1 }'", returnStdout: true).trim()
          env.MINIO_URL = minioIp
          def xoaIp = sh(script: "getent hosts xen-orchestra | awk '{ print \$1 }'", returnStdout: true).trim()
          env.XOA_URL = "ws://${xoaIp}
        }
      }
    }
  
    stage('init') {
      agent {
        docker {
          image 'hashicorp/terraform:1.11.4'
          args "--entrypoint= --add-host minio:${env.MINIO_URL} --add-host minio:${env.XOA_URL}"
        }
      }
      steps {
        dir('terraform'){
        sh '''
          terraform init -no-color
        '''
        }
      }
    }
  
    stage('plan') {
      agent {
        docker {
          image 'hashicorp/terraform:1.11.4'
          args "--entrypoint= --add-host minio:${env.MINIO_URL}  --add-host minio:${env.XOA_URL}"
        }
      }
      steps {
        dir('terraform'){
        sh '''
          terraform plan -no-color
        '''
        }
      }
    }

  }

}
