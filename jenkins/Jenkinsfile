pipeline {
  agent any

  environment {
    XOA_USER = credentials('xoa_user')
    XOA_PASSWORD = credentials('xoa_password')
    AWS_ACCESS_KEY_ID = credentials('aws_access_key_id')
    AWS_SECRET_ACCESS_KEY = credentials('aws_secret_access_key')
    JENKINS_PUB_KEY = credentials('jenkins-pub-key')
    JENKINS_PRIV_KEY = credentials('jenkins-priv-key')
  }
  
  parameters {
    choice(
      name: 'CREATE_OR_DESTROY',
      choices: ['Create', 'Destroy'],
      description: 'Would you like to create or destroy the Kubernetes cluster?'
    )
  }

  stages {

    stage('debug real credentials') {
      steps {
        withCredentials([
          usernamePassword(credentialsId: 'xoa_user', usernameVariable: 'REAL_XOA_USER', passwordVariable: 'REAL_XOA_PASSWORD'),
          string(credentialsId: 'aws_access_key_id', variable: 'REAL_AWS_ACCESS_KEY_ID'),
          string(credentialsId: 'aws_secret_access_key', variable: 'REAL_AWS_SECRET_ACCESS_KEY'),
          string(credentialsId: 'jenkins-pub-key', variable: 'REAL_JENKINS_PUB_KEY'),
          sshUserPrivateKey(credentialsId: 'jenkins-priv-key', keyFileVariable: 'REAL_JENKINS_PRIV_KEY_FILE')
        ]) {
          sh '''
            echo "==== DEBUG RAW CREDENTIALS ===="
            echo "REAL_XOA_USER=$REAL_XOA_USER"
            echo "REAL_XOA_PASSWORD=$REAL_XOA_PASSWORD"
            echo "REAL_AWS_ACCESS_KEY_ID=$REAL_AWS_ACCESS_KEY_ID"
            echo "REAL_AWS_SECRET_ACCESS_KEY=$REAL_AWS_SECRET_ACCESS_KEY"
            echo "REAL_JENKINS_PUB_KEY=$REAL_JENKINS_PUB_KEY"
            echo "REAL_JENKINS_PRIV_KEY_FILE (path)=$REAL_JENKINS_PRIV_KEY_FILE"
            echo "==============================="
            echo "PRIVATE KEY CONTENT:"
            cat $REAL_JENKINS_PRIV_KEY_FILE
          '''
        }
      }
    }




//     stage('authentication') {
//       agent {
//         docker {
//           image 'alpine'
//         }
//       }
//       steps {
//         dir('terraform') {
//           withCredentials([sshUserPrivateKey(credentialsId: 'jenkins-priv-key', keyFileVariable: 'JENKINS_PRIV_KEY')]) {
//             sh '''
//               cp "$JENKINS_PRIV_KEY" id_ed25519
//               echo "$JENKINS_PUB_KEY" > id_ed25519.pub
//             '''
//           }
//         }
//       }
//     }

//     stage('setup terraform endpoints') {
//       steps {
//         script {
//           def minioIp = sh(script: "getent hosts minio | awk '{ print \$1 }'", returnStdout: true).trim()
//           env.MINIO_URL = minioIp
//           def xoaIp = sh(script: "getent hosts xen-orchestra | awk '{ print \$1 }'", returnStdout: true).trim()
//           env.XOA_IP = xoaIp
//         }
//       }
//     }
  
//     stage('init') {
//       agent {
//         docker {
//           image 'hashicorp/terraform:1.11.4'
//           args "--entrypoint= --add-host minio:${env.MINIO_URL} --add-host xen-orchestra:${env.XOA_IP}"
//         }
//       }
//       steps {
//         dir('terraform'){
//         sh '''
//           terraform init -no-color
//         '''
//         }
//       }
//     }
  
//     stage('plan') {
//       agent {
//         docker {
//           image 'hashicorp/terraform:1.11.4'
//           args "--entrypoint= --add-host minio:${env.MINIO_URL} --add-host xen-orchestra:${env.XOA_IP}"
//         }
//       }
//       steps {
//         dir('terraform'){
//         sh '''
//           terraform plan -no-color
//         '''
//         }
//       }
//       when {
//         expression {
//           params.CREATE_OR_DESTROY == "Create"
//         }
//       }
//     }

//     stage('apply') {
//       agent {
//         docker {
//           image 'hashicorp/terraform:1.11.4'
//           args "--entrypoint= --add-host minio:${env.MINIO_URL} --add-host xen-orchestra:${env.XOA_IP}"
//         }
//       }
//       steps {
//         dir('terraform'){
//         sh '''
//           terraform apply -no-color -auto-approve
//         '''
//         }
//       }
//       when {
//         expression {
//           params.CREATE_OR_DESTROY == "Create"
//         }
//       }
//     }

//     // stage('kubespray') {
//     //   agent {
//     //     docker {
//     //       image 'quay.io/kubespray/kubespray:v2.26.0'
//     //       args '--entrypoint="" -u root'
//     //     }
//     //   }
//     //   steps {
//     //     dir('terraform') {
//     //       sh '''
//     //         export ANSIBLE_ROLES_PATH="$ANSIBLE_ROLES_PATH:/kubespray/roles"
//     //         export ANSIBLE_HOST_KEY_CHECKING="False"

//     //         ansible-playbook \
//     //           --become \
//     //           --inventory inventory.ini \
//     //           --extra-vars "kube_network_plugin=flannel" \
//     //           --private-key id_ed25519 \
//     //           /kubespray/cluster.yml
//     //       '''
//     //     }
//     //   }
//     //   when {
//     //     expression {
//     //       params.CREATE_OR_DESTROY == "Create"
//     //     }
//     //   }
//     // }

//     stage('destroy') {
//       agent {
//         docker {
//           image 'hashicorp/terraform:1.11.4'
//           args "--entrypoint= --add-host minio:${env.MINIO_URL} --add-host xen-orchestra:${env.XOA_IP}"
//         }
//       }
//       steps {
//         dir('terraform') {
//           sh '''
//             terraform apply -destroy -no-color -auto-approve
//           '''
//         }
//       }
//       when {
//         expression {
//           params.CREATE_OR_DESTROY == "Destroy"
//         }
//       }
//     }

  }

}
